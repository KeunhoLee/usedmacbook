# #binman::list_versions("chromedriver")
#
# remDr <- fn_start_driver(4442L)
#
# init_page_to_crawl(remDr, url)
#
# parsed_url <- get_detail_url(remDr)
#
# product_name        <- NULL
# product_price       <- NULL
# product_detail_icon <- list()
# product_detail_text <- list()
#
# for( i in 1:length(parsed_url) ){
#
#   sub_url <- parsed_url[i]
#
#   url <- str_interp('${main_url}${sub_url}')
#
#   page_src <- get_page_src(remDr, url)
#
#   product_id    <- c(product_id, get_product_id(page_src))
#
#   product_name  <- c(product_name, get_product_name(page_src))
#
#   product_price <- c(product_price, get_product_price(page_src))
#
#   product_detail_icon[[i]] <- get_product_detail_icon(page_src)
#
#   product_detail_text[[i]] <- get_product_detail_text(page_src)
#
#   Sys.sleep( rexp(1, 1/3) )
#
# }
#
# result <- list(get_product_id,
#                product_name,
#                product_price,
#                product_detail_icon,
#                product_detail_text)
source(paste0(SCRIPT_HOME, 'packages.R'))
main_url <- 'https://www.withsellit.com'
url <- str_interp('${main_url}/search?query=%EB%A7%A5%EB%B6%81&buyable=buyable&categories=laptop_pc&used_states=used')
remDr <- fn_start_driver(4442L)
init_page_to_crawl(remDr, url)
parsed_url <- get_detail_url(remDr)
product_name        <- NULL
product_price       <- NULL
product_detail_icon <- list()
product_detail_text <- list()
for( i in 1:length(parsed_url) ){
sub_url <- parsed_url[i]
url <- str_interp('${main_url}${sub_url}')
page_src <- get_page_src(remDr, url)
product_id    <- c(product_id, get_product_id(page_src))
product_name  <- c(product_name, get_product_name(page_src))
product_price <- c(product_price, get_product_price(page_src))
product_detail_icon[[i]] <- get_product_detail_icon(page_src)
product_detail_text[[i]] <- get_product_detail_text(page_src)
Sys.sleep( rexp(1, 1/3) )
}
result <- list(get_product_id,
product_name,
product_price,
product_detail_icon,
product_detail_text)
# 최초에 N개가 노출되고 스크롤을 내리면 추가 Item들이 추가 노출된다.
# 구매 가능한 상품만 체크해야한다.
# 제품 상세페이지로 들어가서 제품정보 ( 액정 기스 등등 ... )
# 가격이 없는제품은 탐색할 필요가 없다.
# 크롬 브라우저 버전 관련된 에러 발생함 -> 내PC의 크롬 버전을직접 명시하면서 해결 -> 다른PC 에서는? 팬텀모드에서는?
#
#
#
#
#
#
#
#
#
# selenium ----------------------------------------------------------------
fn_start_driver <- function(port = 4445L, browser = "chrome", chromever = "81.0.4044.69"){
# eCaps <- list(chromeOptions = list(
#   args = c('--headless', '--disable-gpu', '--window-size=1280,800')
# ))
remDr <- rsDriver(port = port, browser = browser, chromever = chromever)#, extraCapabilities = eCaps)$client
return(remDr)
}
init_page_to_crawl <- function(remDr, url){
remDr$client$navigate(url)
Sys.sleep(1) # wait 1 sec to load page
remDr$client$executeScript('window.scrollTo(0, document.body.scrollHeight);') # scroll down to bottom
Sys.sleep(1) # wait 1 sec to load page
remDr$client$executeScript('window.scrollTo(0, document.body.scrollHeight);') # scroll down to bottom
Sys.sleep(1) # wait 1 sec to load page
remDr$client$executeScript('window.scrollTo(0, 0);') # return to top
}
get_detail_url <- function(remDr){
page_src <- remDr$client$getPageSource() # get page source
items <- read_html(page_src[[1]]) %>% html_nodes(xpath = '//*[@ng-repeat="item in orders"]') # get items from page source
url_to_detail <- items %>% html_nodes(xpath = '//*[@class="gdidx-good-info"]') %>% html_attrs()
url_to_detail <- sapply(url_to_detail, function(x) x['href'])
return(url_to_detail)
}
# In page
get_page_src <- function(remDr, url){
remDr$client$navigate( url )
page_src <- remDr$client$getPageSource()
return(page_src)
}
get_product_id <- function(page_src){
result <- read_html(page_src[[1]]) %>%
html_nodes(xpath = '//*[@class="gdshw-product-name ng-binding"]') %>%
html_text()
return(result)
}
get_product_name <- function(page_src){
result <- read_html(page_src[[1]]) %>%
html_nodes(xpath = '//*[@class="gdshw-product-id ng-binding"]') %>%
html_text()
return(result)
}
get_product_price <- function(page_src){
result <- read_html(page_src[[1]]) %>%
html_nodes(xpath = '//*[@class="gdshw-price ng-scope ng-binding"]') %>%
html_text() %>% gsub('원', '', .) %>% gsub(',', '', .)
return(result)
}
get_product_detail_icon <- function(page_src){
result <- read_html(page_src[[1]]) %>%
html_nodes(xpath = '//*[@class="gdshw-summary-label ng-binding"]') %>%
html_text()
return(result)
}
get_product_detail_text <- function(page_src){
# Detail text content
result <- read_html(page_src[[1]]) %>%
html_nodes(xpath = '//*[@class="gdshw-detail-content ng-binding"]') %>%
html_text()
# Detail text label
names(result) <- read_html(page_src[[1]]) %>%
html_nodes(xpath = '//*[@class="gdshw-detail-label ng-binding"]') %>%
html_text()
return(result)
}
# merge
# code test ---------------------------------------------------------------
#remDr$server$stop()
source(paste0(SCRIPT_HOME, 'packages.R'))
main_url <- 'https://www.withsellit.com'
url <- str_interp('${main_url}/search?query=%EB%A7%A5%EB%B6%81&buyable=buyable&categories=laptop_pc&used_states=used')
#binman::list_versions("chromedriver")
remDr <- fn_start_driver(4442L)
init_page_to_crawl(remDr, url)
parsed_url <- get_detail_url(remDr)
product_id          <- NULL
product_name        <- NULL
product_price       <- NULL
product_detail_icon <- list()
product_detail_text <- list()
for( i in 1:length(parsed_url) ){
sub_url <- parsed_url[i]
url <- str_interp('${main_url}${sub_url}')
page_src <- get_page_src(remDr, url)
product_id    <- c(product_id, get_product_id(page_src))
product_name  <- c(product_name, get_product_name(page_src))
product_price <- c(product_price, get_product_price(page_src))
product_detail_icon[[i]] <- get_product_detail_icon(page_src)
product_detail_text[[i]] <- get_product_detail_text(page_src)
Sys.sleep( rexp(1, 1/3) )
}
remDr$server$stop()
source(paste0(SCRIPT_HOME, 'packages.R'))
main_url <- 'https://www.withsellit.com'
url <- str_interp('${main_url}/search?query=%EB%A7%A5%EB%B6%81&buyable=buyable&categories=laptop_pc&used_states=used')
remDr <- fn_start_driver(4442L)
init_page_to_crawl(remDr, url)
parsed_url <- get_detail_url(remDr)
product_id          <- NULL
product_name        <- NULL
product_price       <- NULL
product_detail_icon <- list()
product_detail_text <- list()
for( i in 1:length(parsed_url) ){
sub_url <- parsed_url[i]
url <- str_interp('${main_url}${sub_url}')
page_src <- get_page_src(remDr, url)
product_id    <- c(product_id, get_product_id(page_src))
product_name  <- c(product_name, get_product_name(page_src))
product_price <- c(product_price, get_product_price(page_src))
product_detail_icon[[i]] <- get_product_detail_icon(page_src)
product_detail_text[[i]] <- get_product_detail_text(page_src)
Sys.sleep( rexp(1, 1/3) )
}
result <- list(get_product_id,
product_name,
product_price,
product_detail_icon,
product_detail_text)
result <- list(product_id,
product_name,
product_price,
product_detail_icon,
product_detail_text)
result
result[[1]]
product_id
product_name
?regexec
remDr$server$stop()
# 최초에 N개가 노출되고 스크롤을 내리면 추가 Item들이 추가 노출된다.
# 구매 가능한 상품만 체크해야한다.
# 제품 상세페이지로 들어가서 제품정보 ( 액정 기스 등등 ... )
# 가격이 없는제품은 탐색할 필요가 없다.
# 크롬 브라우저 버전 관련된 에러 발생함 -> 내PC의 크롬 버전을직접 명시하면서 해결 -> 다른PC 에서는? 팬텀모드에서는?
#
#
#
#
#
#
#
#
#
# selenium ----------------------------------------------------------------
fn_start_driver <- function(port = 4445L, browser = "chrome", chromever = "81.0.4044.69"){
# eCaps <- list(chromeOptions = list(
#   args = c('--headless', '--disable-gpu', '--window-size=1280,800')
# ))
remDr <- rsDriver(port = port, browser = browser, chromever = chromever)#, extraCapabilities = eCaps)$client
return(remDr)
}
init_page_to_crawl <- function(remDr, url){
remDr$client$navigate(url)
Sys.sleep(1) # wait 1 sec to load page
remDr$client$executeScript('window.scrollTo(0, document.body.scrollHeight);') # scroll down to bottom
Sys.sleep(1) # wait 1 sec to load page
remDr$client$executeScript('window.scrollTo(0, document.body.scrollHeight);') # scroll down to bottom
Sys.sleep(1) # wait 1 sec to load page
remDr$client$executeScript('window.scrollTo(0, 0);') # return to top
}
get_detail_url <- function(remDr){
page_src <- remDr$client$getPageSource() # get page source
items <- read_html(page_src[[1]]) %>% html_nodes(xpath = '//*[@ng-repeat="item in orders"]') # get items from page source
url_to_detail <- items %>% html_nodes(xpath = '//*[@class="gdidx-good-info"]') %>% html_attrs()
url_to_detail <- sapply(url_to_detail, function(x) x['href'])
return(url_to_detail)
}
# In page
get_page_src <- function(remDr, url){
remDr$client$navigate( url )
page_src <- remDr$client$getPageSource()
return(page_src)
}
get_product_id <- function(page_src){
result <- read_html(page_src[[1]]) %>%
html_nodes(xpath = '//*[@class="gdshw-product-id ng-binding"]') %>%
html_text() %>% regexec('[^0-9]', '', .)
return(result)
}
?regexec
get_product_name <- function(page_src){
result <- read_html(page_src[[1]]) %>%
html_nodes(xpath = '//*[@class="gdshw-product-name ng-binding"]') %>%
html_text()
return(result)
}
get_product_price <- function(page_src){
result <- read_html(page_src[[1]]) %>%
html_nodes(xpath = '//*[@class="gdshw-price ng-scope ng-binding"]') %>%
html_text() %>% gsub('원', '', .) %>% gsub(',', '', .)
return(result)
}
get_product_detail_icon <- function(page_src){
result <- read_html(page_src[[1]]) %>%
html_nodes(xpath = '//*[@class="gdshw-summary-label ng-binding"]') %>%
html_text()
return(result)
}
get_product_detail_text <- function(page_src){
# Detail text content
result <- read_html(page_src[[1]]) %>%
html_nodes(xpath = '//*[@class="gdshw-detail-content ng-binding"]') %>%
html_text()
# Detail text label
names(result) <- read_html(page_src[[1]]) %>%
html_nodes(xpath = '//*[@class="gdshw-detail-label ng-binding"]') %>%
html_text()
return(result)
}
# merge
# code test ---------------------------------------------------------------
#remDr$server$stop()
source(paste0(SCRIPT_HOME, 'packages.R'))
main_url <- 'https://www.withsellit.com'
url <- str_interp('${main_url}/search?query=%EB%A7%A5%EB%B6%81&buyable=buyable&categories=laptop_pc&used_states=used')
#binman::list_versions("chromedriver")
remDr <- fn_start_driver(4442L)
init_page_to_crawl(remDr, url)
parsed_url <- get_detail_url(remDr)
product_id          <- NULL
product_name        <- NULL
product_price       <- NULL
product_detail_icon <- list()
product_detail_text <- list()
for( i in 1:length(parsed_url) ){
sub_url <- parsed_url[i]
url <- str_interp('${main_url}${sub_url}')
page_src <- get_page_src(remDr, url)
product_id    <- c(product_id, get_product_id(page_src))
product_name  <- c(product_name, get_product_name(page_src))
product_price <- c(product_price, get_product_price(page_src))
product_detail_icon[[i]] <- get_product_detail_icon(page_src)
product_detail_text[[i]] <- get_product_detail_text(page_src)
Sys.sleep( rexp(1, 1/3) )
}
result <- list(product_id,
product_name,
product_price,
product_detail_icon,
product_detail_text)
result[[1]]
get_product_id(page_src)
get_product_id <- function(page_src){
result <- read_html(page_src[[1]]) %>%
html_nodes(xpath = '//*[@class="gdshw-product-id ng-binding"]') %>%
html_text() %>% gsub('[^0-9]', '', .)
return(result)
}
get_product_id(page_src)
remDr$server$stop()
source(paste0(SCRIPT_HOME, 'packages.R'))
main_url <- 'https://www.withsellit.com'
url <- str_interp('${main_url}/search?query=%EB%A7%A5%EB%B6%81&buyable=buyable&categories=laptop_pc&used_states=used')
remDr <- fn_start_driver(4442L)
init_page_to_crawl(remDr, url)
parsed_url <- get_detail_url(remDr)
product_id          <- NULL
product_name        <- NULL
product_price       <- NULL
product_detail_icon <- list()
product_detail_text <- list()
for( i in 1:length(parsed_url) ){
sub_url <- parsed_url[i]
url <- str_interp('${main_url}${sub_url}')
page_src <- get_page_src(remDr, url)
product_id    <- c(product_id, get_product_id(page_src))
product_name  <- c(product_name, get_product_name(page_src))
product_price <- c(product_price, get_product_price(page_src))
product_detail_icon[[i]] <- get_product_detail_icon(page_src)
product_detail_text[[i]] <- get_product_detail_text(page_src)
Sys.sleep( rexp(1, 1/3) )
}
result <- list(product_id,
product_name,
product_price,
product_detail_icon,
product_detail_text)
sapply( result, length)
Sys.time()
sapply( result, length )
sapply( result, length )
result[4]
result[1:4]
str(result)
result[1:3]
as.data.frame( result[1:3] )
as.data.frame( result[1:3] ) %>% View
df <- as.data.frame( result[1:3] )
names(df) <- c('product_id', 'product_name', 'product_price')
df
result[4]
result[[4]]
do.call( result[[4]], rbind )
do.call( rbind, result[[4]] )
name(result[[4]])
names(result[[4]])
names(result[[4]][1])
result[[4]][1]
names(result[[4]][[1]])
result[[4]][[1]]
sapply( result[[4]], length)
result[[4]][[1]]
result[[4]][[2]]
saveRDS(df, 'basic_info.csv')
saveRDS(df, 'basic_info.rds')
saveRDS(result, 'basic_info.rds')
id_record <- readRDS('basic_info.rds')$product_id
id_record
readRDS('basic_info.rds')
saveRDS(result, 'data_base.rds')
saveRDS(df, 'basic_info.rds')
id_record <- readRDS('basic_info.rds')$product_id
id_record
id_record <- readRDS('basic_info.rds', stringsAsFactors = FALSE)$product_id
df
str(df)
df <- as.data.frame( result[1:3], stringsAsFactors = FALSE )
names(df) <- c('product_id', 'product_name', 'product_price')
saveRDS(df, 'basic_info.rds')
id_record <- readRDS('basic_info.rds')$product_id
id_record
df$timestamp <- Sys.time()
saveRDS(df, 'basic_info.rds')
df
saveRDS(df, 'basic_info.rds')
saveRDS(result, 'data_base.rds')
basic_info <- readRDS('basic_info.rds')
id_record <- basic_info$product_id
id_record
result
timestamp
timestamp()
##------ Thu May 07 22:31:21 2020 ------##
str_interp('data_${timestamp}.rds')
str_interp('data_${tstamp}.rds')
tstamp <- Sys.time()
str_interp('data_${tstamp}.rds')
df$timestamp <- tstamp
str_interp('data_${tstamp}.rds')
saveRDS(result, str_interp('data_${tstamp}.rds'))
tstamp <- gsub(' ', '', tstamp)
tstamp
tstamp <- gsub(' ', '-', tstamp)
tstamp <- Sys.time()
tstamp <- gsub(' ', '-', tstamp)
df$timestamp <- tstamp
saveRDS(result, str_interp('data_${tstamp}.rds'))
tstamp <- gsub(':', '', tstamp)
tstamp
tstamp <- gsub('-', '', tstamp)
tstamp
df$timestamp <- tstamp
saveRDS(result, str_interp('data_${tstamp}.rds'))
length(result)
length(result[[1]])
print( paste0( 'Result cases : ', length(result[[1]]) ) )
SCRIPT_HOME <- Sys.getenv('SCRIPT_HOME')
DATA_HOME   <- Sys.getenv('DATA_HOME')
SCRIPT_HOME
print(Sys.setenv(SCRIPT_HOME = 'src/') )
print(Sys.setenv(DATA_HOME = 'data/') )
SCRIPT_HOME
Sys.setenv(SCRIPT_HOME = 'src/')
Sys.getenv('SCRIPT_HOME')
Sys.setenv(SCRIPT_HOME = 'src/')
Sys.setenv(DATA_HOME = 'data/')
SCRIPT_HOME <- Sys.getenv('SCRIPT_HOME')
DATA_HOME   <- Sys.getenv('DATA_HOME')
DATA_HOME
?Sys.setenv
#options(verbose = FALSE)
Sys.getenv()
print(SCRIPT_HOME)
print(DATA_HOME)
print(paste0( 'DATA_HOME : ', DATA_HOME) )
print(paste0( 'SCRIPT_HOME : ', SCRIPT_HOME) )
readRenviron('.env')
print(paste0( 'SCRIPT_HOME : ', SCRIPT_HOME) )
print(paste0( 'DATA_HOME : ', DATA_HOME) )
Sys.setenv(SCRIPT_HOME = 'srcaa/')
print(paste0( 'SCRIPT_HOME : ', SCRIPT_HOME) )
SCRIPT_HOME <- Sys.getenv('SCRIPT_HOME')
print(paste0( 'SCRIPT_HOME : ', SCRIPT_HOME) )
readRenviron('.env')
print(paste0( 'SCRIPT_HOME : ', SCRIPT_HOME) )
readRenviron('.env')
print(paste0( 'SCRIPT_HOME : ', SCRIPT_HOME) )
print(paste0( 'DATA_HOME : ', DATA_HOME) )
readRenviron('.env')
rm(DATA_HOME)
rm(SCRIPT_HOME)
readRenviron('.env')
?readRenviron
SCRIPT_HOME <- Sys.getenv('SCRIPT_HOME')
DATA_HOME   <- Sys.getenv('DATA_HOME')
print(paste0( 'SCRIPT_HOME : ', SCRIPT_HOME) )
print(paste0( 'DATA_HOME : ', DATA_HOME) )
Sys.getenv('SCRIPT_HOME')
Sys.setenv(SCRIPT_HOME = 'src/')
Sys.setenv(DATA_HOME = 'data/')
SCRIPT_HOME <- Sys.getenv('SCRIPT_HOME')
DATA_HOME   <- Sys.getenv('DATA_HOME')
print(paste0( 'SCRIPT_HOME : ', SCRIPT_HOME) )
print(paste0( 'DATA_HOME : ', DATA_HOME) )
source( paste0(SCRIPT_HOME, 'packages.R') )
basic_info <- readRDS('basic_info.rds')
id_record <- basic_info$product_id
id_record
main_url <- 'https://www.withsellit.com'
url <- str_interp('${main_url}/search?query=%EB%A7%A5%EB%B6%81&buyable=buyable&categories=laptop_pc&used_states=used')
remDr <- fn_start_driver(4442L)
remDr$server$stop()
source( paste0(SCRIPT_HOME, 'tools_sellit.R') )
source( paste0(SCRIPT_HOME, 'tools_sellit.R') )
result[[1]]
length(result[[2]])
result[[2]]
df
basic_info
basic_info
basic_info$timestamp <- tstamp
tstamp <- Sys.time()
tstamp <- gsub(' ', '-', tstamp)
tstamp <- gsub(':', '', tstamp)
tstamp <- gsub('-', '', tstamp)
df$timestamp <- tstamp
basic_info$timestamp <- tstamp
df
basic_info <- rbind(basic_info, df)
df
df <- as.data.frame( result[1:3], stringsAsFactors = FALSE )
